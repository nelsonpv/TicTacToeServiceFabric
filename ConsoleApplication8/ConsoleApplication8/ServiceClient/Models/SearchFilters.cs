// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.IT.GRM.ServiceClient.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Microsoft.IT.GRM.ServiceClient.Models
{
    public partial class SearchFilters
    {
        private IList<Geography> _area;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Geography> Area
        {
            get { return this._area; }
            set { this._area = value; }
        }
        
        private IList<Geography> _bigArea;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Geography> BigArea
        {
            get { return this._bigArea; }
            set { this._bigArea = value; }
        }
        
        private string _clearanceLevel;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string ClearanceLevel
        {
            get { return this._clearanceLevel; }
            set { this._clearanceLevel = value; }
        }
        
        private IList<Geography> _country;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Geography> Country
        {
            get { return this._country; }
            set { this._country = value; }
        }
        
        private string _customer;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Customer
        {
            get { return this._customer; }
            set { this._customer = value; }
        }
        
        private IList<NamedValuePair> _deliveryCountry;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> DeliveryCountry
        {
            get { return this._deliveryCountry; }
            set { this._deliveryCountry = value; }
        }
        
        private IList<NamedValuePair> _deliveryMechanism;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> DeliveryMechanism
        {
            get { return this._deliveryMechanism; }
            set { this._deliveryMechanism = value; }
        }
        
        private IList<NamedValuePair> _engagementType;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> EngagementType
        {
            get { return this._engagementType; }
            set { this._engagementType = value; }
        }
        
        private IList<NamedValuePair> _opportunity;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> Opportunity
        {
            get { return this._opportunity; }
            set { this._opportunity = value; }
        }
        
        private IList<NamedValuePair> _primaryDomain;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> PrimaryDomain
        {
            get { return this._primaryDomain; }
            set { this._primaryDomain = value; }
        }
        
        private IList<NamedValuePair> _primaryProduct;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> PrimaryProduct
        {
            get { return this._primaryProduct; }
            set { this._primaryProduct = value; }
        }
        
        private IList<NamedValuePair> _product;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> Product
        {
            get { return this._product; }
            set { this._product = value; }
        }
        
        private IList<NamedValuePair> _productTechnology;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> ProductTechnology
        {
            get { return this._productTechnology; }
            set { this._productTechnology = value; }
        }
        
        private IList<NamedValuePair> _queue;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> Queue
        {
            get { return this._queue; }
            set { this._queue = value; }
        }
        
        private IList<Geography> _region;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Geography> Region
        {
            get { return this._region; }
            set { this._region = value; }
        }
        
        private IList<Geography> _regionCountry;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Geography> RegionCountry
        {
            get { return this._regionCountry; }
            set { this._regionCountry = value; }
        }
        
        private string _requestor;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Requestor
        {
            get { return this._requestor; }
            set { this._requestor = value; }
        }
        
        private IList<NamedValuePair> _requestRole;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> RequestRole
        {
            get { return this._requestRole; }
            set { this._requestRole = value; }
        }
        
        private string _requestStartDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string RequestStartDate
        {
            get { return this._requestStartDate; }
            set { this._requestStartDate = value; }
        }
        
        private IList<NamedValuePair> _requestType;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> RequestType
        {
            get { return this._requestType; }
            set { this._requestType = value; }
        }
        
        private IList<NamedValuePair> _security;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> Security
        {
            get { return this._security; }
            set { this._security = value; }
        }
        
        private IList<NamedValuePair> _technology;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> Technology
        {
            get { return this._technology; }
            set { this._technology = value; }
        }
        
        private IList<NamedValuePair> _version;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> Version
        {
            get { return this._version; }
            set { this._version = value; }
        }
        
        private IList<NamedValuePair> _workShop;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<NamedValuePair> WorkShop
        {
            get { return this._workShop; }
            set { this._workShop = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SearchFilters class.
        /// </summary>
        public SearchFilters()
        {
            this.Area = new LazyList<Geography>();
            this.BigArea = new LazyList<Geography>();
            this.Country = new LazyList<Geography>();
            this.DeliveryCountry = new LazyList<NamedValuePair>();
            this.DeliveryMechanism = new LazyList<NamedValuePair>();
            this.EngagementType = new LazyList<NamedValuePair>();
            this.Opportunity = new LazyList<NamedValuePair>();
            this.PrimaryDomain = new LazyList<NamedValuePair>();
            this.PrimaryProduct = new LazyList<NamedValuePair>();
            this.Product = new LazyList<NamedValuePair>();
            this.ProductTechnology = new LazyList<NamedValuePair>();
            this.Queue = new LazyList<NamedValuePair>();
            this.Region = new LazyList<Geography>();
            this.RegionCountry = new LazyList<Geography>();
            this.RequestRole = new LazyList<NamedValuePair>();
            this.RequestType = new LazyList<NamedValuePair>();
            this.Security = new LazyList<NamedValuePair>();
            this.Technology = new LazyList<NamedValuePair>();
            this.Version = new LazyList<NamedValuePair>();
            this.WorkShop = new LazyList<NamedValuePair>();
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type SearchFilters
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            JArray areaSequence = null;
            if (this.Area != null)
            {
                if (this.Area is ILazyCollection<Geography> == false || ((ILazyCollection<Geography>)this.Area).IsInitialized)
                {
                    areaSequence = new JArray();
                    outputObject["Area"] = areaSequence;
                    foreach (Geography areaItem in this.Area)
                    {
                        if (areaItem != null)
                        {
                            areaSequence.Add(areaItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray bigAreaSequence = null;
            if (this.BigArea != null)
            {
                if (this.BigArea is ILazyCollection<Geography> == false || ((ILazyCollection<Geography>)this.BigArea).IsInitialized)
                {
                    bigAreaSequence = new JArray();
                    outputObject["BigArea"] = bigAreaSequence;
                    foreach (Geography bigAreaItem in this.BigArea)
                    {
                        if (bigAreaItem != null)
                        {
                            bigAreaSequence.Add(bigAreaItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.ClearanceLevel != null)
            {
                outputObject["ClearanceLevel"] = this.ClearanceLevel;
            }
            JArray countrySequence = null;
            if (this.Country != null)
            {
                if (this.Country is ILazyCollection<Geography> == false || ((ILazyCollection<Geography>)this.Country).IsInitialized)
                {
                    countrySequence = new JArray();
                    outputObject["Country"] = countrySequence;
                    foreach (Geography countryItem in this.Country)
                    {
                        if (countryItem != null)
                        {
                            countrySequence.Add(countryItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.Customer != null)
            {
                outputObject["Customer"] = this.Customer;
            }
            JArray deliveryCountrySequence = null;
            if (this.DeliveryCountry != null)
            {
                if (this.DeliveryCountry is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.DeliveryCountry).IsInitialized)
                {
                    deliveryCountrySequence = new JArray();
                    outputObject["DeliveryCountry"] = deliveryCountrySequence;
                    foreach (NamedValuePair deliveryCountryItem in this.DeliveryCountry)
                    {
                        if (deliveryCountryItem != null)
                        {
                            deliveryCountrySequence.Add(deliveryCountryItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray deliveryMechanismSequence = null;
            if (this.DeliveryMechanism != null)
            {
                if (this.DeliveryMechanism is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.DeliveryMechanism).IsInitialized)
                {
                    deliveryMechanismSequence = new JArray();
                    outputObject["DeliveryMechanism"] = deliveryMechanismSequence;
                    foreach (NamedValuePair deliveryMechanismItem in this.DeliveryMechanism)
                    {
                        if (deliveryMechanismItem != null)
                        {
                            deliveryMechanismSequence.Add(deliveryMechanismItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray engagementTypeSequence = null;
            if (this.EngagementType != null)
            {
                if (this.EngagementType is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.EngagementType).IsInitialized)
                {
                    engagementTypeSequence = new JArray();
                    outputObject["EngagementType"] = engagementTypeSequence;
                    foreach (NamedValuePair engagementTypeItem in this.EngagementType)
                    {
                        if (engagementTypeItem != null)
                        {
                            engagementTypeSequence.Add(engagementTypeItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray opportunitySequence = null;
            if (this.Opportunity != null)
            {
                if (this.Opportunity is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.Opportunity).IsInitialized)
                {
                    opportunitySequence = new JArray();
                    outputObject["Opportunity"] = opportunitySequence;
                    foreach (NamedValuePair opportunityItem in this.Opportunity)
                    {
                        if (opportunityItem != null)
                        {
                            opportunitySequence.Add(opportunityItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray primaryDomainSequence = null;
            if (this.PrimaryDomain != null)
            {
                if (this.PrimaryDomain is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.PrimaryDomain).IsInitialized)
                {
                    primaryDomainSequence = new JArray();
                    outputObject["PrimaryDomain"] = primaryDomainSequence;
                    foreach (NamedValuePair primaryDomainItem in this.PrimaryDomain)
                    {
                        if (primaryDomainItem != null)
                        {
                            primaryDomainSequence.Add(primaryDomainItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray primaryProductSequence = null;
            if (this.PrimaryProduct != null)
            {
                if (this.PrimaryProduct is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.PrimaryProduct).IsInitialized)
                {
                    primaryProductSequence = new JArray();
                    outputObject["PrimaryProduct"] = primaryProductSequence;
                    foreach (NamedValuePair primaryProductItem in this.PrimaryProduct)
                    {
                        if (primaryProductItem != null)
                        {
                            primaryProductSequence.Add(primaryProductItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray productSequence = null;
            if (this.Product != null)
            {
                if (this.Product is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.Product).IsInitialized)
                {
                    productSequence = new JArray();
                    outputObject["Product"] = productSequence;
                    foreach (NamedValuePair productItem in this.Product)
                    {
                        if (productItem != null)
                        {
                            productSequence.Add(productItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray productTechnologySequence = null;
            if (this.ProductTechnology != null)
            {
                if (this.ProductTechnology is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.ProductTechnology).IsInitialized)
                {
                    productTechnologySequence = new JArray();
                    outputObject["ProductTechnology"] = productTechnologySequence;
                    foreach (NamedValuePair productTechnologyItem in this.ProductTechnology)
                    {
                        if (productTechnologyItem != null)
                        {
                            productTechnologySequence.Add(productTechnologyItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray queueSequence = null;
            if (this.Queue != null)
            {
                if (this.Queue is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.Queue).IsInitialized)
                {
                    queueSequence = new JArray();
                    outputObject["Queue"] = queueSequence;
                    foreach (NamedValuePair queueItem in this.Queue)
                    {
                        if (queueItem != null)
                        {
                            queueSequence.Add(queueItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray regionSequence = null;
            if (this.Region != null)
            {
                if (this.Region is ILazyCollection<Geography> == false || ((ILazyCollection<Geography>)this.Region).IsInitialized)
                {
                    regionSequence = new JArray();
                    outputObject["Region"] = regionSequence;
                    foreach (Geography regionItem in this.Region)
                    {
                        if (regionItem != null)
                        {
                            regionSequence.Add(regionItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray regionCountrySequence = null;
            if (this.RegionCountry != null)
            {
                if (this.RegionCountry is ILazyCollection<Geography> == false || ((ILazyCollection<Geography>)this.RegionCountry).IsInitialized)
                {
                    regionCountrySequence = new JArray();
                    outputObject["RegionCountry"] = regionCountrySequence;
                    foreach (Geography regionCountryItem in this.RegionCountry)
                    {
                        if (regionCountryItem != null)
                        {
                            regionCountrySequence.Add(regionCountryItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.Requestor != null)
            {
                outputObject["Requestor"] = this.Requestor;
            }
            JArray requestRoleSequence = null;
            if (this.RequestRole != null)
            {
                if (this.RequestRole is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.RequestRole).IsInitialized)
                {
                    requestRoleSequence = new JArray();
                    outputObject["RequestRole"] = requestRoleSequence;
                    foreach (NamedValuePair requestRoleItem in this.RequestRole)
                    {
                        if (requestRoleItem != null)
                        {
                            requestRoleSequence.Add(requestRoleItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.RequestStartDate != null)
            {
                outputObject["RequestStartDate"] = this.RequestStartDate;
            }
            JArray requestTypeSequence = null;
            if (this.RequestType != null)
            {
                if (this.RequestType is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.RequestType).IsInitialized)
                {
                    requestTypeSequence = new JArray();
                    outputObject["RequestType"] = requestTypeSequence;
                    foreach (NamedValuePair requestTypeItem in this.RequestType)
                    {
                        if (requestTypeItem != null)
                        {
                            requestTypeSequence.Add(requestTypeItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray securitySequence = null;
            if (this.Security != null)
            {
                if (this.Security is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.Security).IsInitialized)
                {
                    securitySequence = new JArray();
                    outputObject["Security"] = securitySequence;
                    foreach (NamedValuePair securityItem in this.Security)
                    {
                        if (securityItem != null)
                        {
                            securitySequence.Add(securityItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray technologySequence = null;
            if (this.Technology != null)
            {
                if (this.Technology is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.Technology).IsInitialized)
                {
                    technologySequence = new JArray();
                    outputObject["Technology"] = technologySequence;
                    foreach (NamedValuePair technologyItem in this.Technology)
                    {
                        if (technologyItem != null)
                        {
                            technologySequence.Add(technologyItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray versionSequence = null;
            if (this.Version != null)
            {
                if (this.Version is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.Version).IsInitialized)
                {
                    versionSequence = new JArray();
                    outputObject["Version"] = versionSequence;
                    foreach (NamedValuePair versionItem in this.Version)
                    {
                        if (versionItem != null)
                        {
                            versionSequence.Add(versionItem.SerializeJson(null));
                        }
                    }
                }
            }
            JArray workShopSequence = null;
            if (this.WorkShop != null)
            {
                if (this.WorkShop is ILazyCollection<NamedValuePair> == false || ((ILazyCollection<NamedValuePair>)this.WorkShop).IsInitialized)
                {
                    workShopSequence = new JArray();
                    outputObject["WorkShop"] = workShopSequence;
                    foreach (NamedValuePair workShopItem in this.WorkShop)
                    {
                        if (workShopItem != null)
                        {
                            workShopSequence.Add(workShopItem.SerializeJson(null));
                        }
                    }
                }
            }
            return outputObject;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken areaSequence = ((JToken)inputObject["Area"]);
                if (areaSequence != null && areaSequence.Type != JTokenType.Null)
                {
                    foreach (JToken areaValue in ((JArray)areaSequence))
                    {
                        Geography geography = new Geography();
                        geography.DeserializeJson(areaValue);
                        this.Area.Add(geography);
                    }
                }
                JToken bigAreaSequence = ((JToken)inputObject["BigArea"]);
                if (bigAreaSequence != null && bigAreaSequence.Type != JTokenType.Null)
                {
                    foreach (JToken bigAreaValue in ((JArray)bigAreaSequence))
                    {
                        Geography geography2 = new Geography();
                        geography2.DeserializeJson(bigAreaValue);
                        this.BigArea.Add(geography2);
                    }
                }
                JToken clearanceLevelValue = inputObject["ClearanceLevel"];
                if (clearanceLevelValue != null && clearanceLevelValue.Type != JTokenType.Null)
                {
                    this.ClearanceLevel = ((string)clearanceLevelValue);
                }
                JToken countrySequence = ((JToken)inputObject["Country"]);
                if (countrySequence != null && countrySequence.Type != JTokenType.Null)
                {
                    foreach (JToken countryValue in ((JArray)countrySequence))
                    {
                        Geography geography3 = new Geography();
                        geography3.DeserializeJson(countryValue);
                        this.Country.Add(geography3);
                    }
                }
                JToken customerValue = inputObject["Customer"];
                if (customerValue != null && customerValue.Type != JTokenType.Null)
                {
                    this.Customer = ((string)customerValue);
                }
                JToken deliveryCountrySequence = ((JToken)inputObject["DeliveryCountry"]);
                if (deliveryCountrySequence != null && deliveryCountrySequence.Type != JTokenType.Null)
                {
                    foreach (JToken deliveryCountryValue in ((JArray)deliveryCountrySequence))
                    {
                        NamedValuePair namedValuePair = new NamedValuePair();
                        namedValuePair.DeserializeJson(deliveryCountryValue);
                        this.DeliveryCountry.Add(namedValuePair);
                    }
                }
                JToken deliveryMechanismSequence = ((JToken)inputObject["DeliveryMechanism"]);
                if (deliveryMechanismSequence != null && deliveryMechanismSequence.Type != JTokenType.Null)
                {
                    foreach (JToken deliveryMechanismValue in ((JArray)deliveryMechanismSequence))
                    {
                        NamedValuePair namedValuePair2 = new NamedValuePair();
                        namedValuePair2.DeserializeJson(deliveryMechanismValue);
                        this.DeliveryMechanism.Add(namedValuePair2);
                    }
                }
                JToken engagementTypeSequence = ((JToken)inputObject["EngagementType"]);
                if (engagementTypeSequence != null && engagementTypeSequence.Type != JTokenType.Null)
                {
                    foreach (JToken engagementTypeValue in ((JArray)engagementTypeSequence))
                    {
                        NamedValuePair namedValuePair3 = new NamedValuePair();
                        namedValuePair3.DeserializeJson(engagementTypeValue);
                        this.EngagementType.Add(namedValuePair3);
                    }
                }
                JToken opportunitySequence = ((JToken)inputObject["Opportunity"]);
                if (opportunitySequence != null && opportunitySequence.Type != JTokenType.Null)
                {
                    foreach (JToken opportunityValue in ((JArray)opportunitySequence))
                    {
                        NamedValuePair namedValuePair4 = new NamedValuePair();
                        namedValuePair4.DeserializeJson(opportunityValue);
                        this.Opportunity.Add(namedValuePair4);
                    }
                }
                JToken primaryDomainSequence = ((JToken)inputObject["PrimaryDomain"]);
                if (primaryDomainSequence != null && primaryDomainSequence.Type != JTokenType.Null)
                {
                    foreach (JToken primaryDomainValue in ((JArray)primaryDomainSequence))
                    {
                        NamedValuePair namedValuePair5 = new NamedValuePair();
                        namedValuePair5.DeserializeJson(primaryDomainValue);
                        this.PrimaryDomain.Add(namedValuePair5);
                    }
                }
                JToken primaryProductSequence = ((JToken)inputObject["PrimaryProduct"]);
                if (primaryProductSequence != null && primaryProductSequence.Type != JTokenType.Null)
                {
                    foreach (JToken primaryProductValue in ((JArray)primaryProductSequence))
                    {
                        NamedValuePair namedValuePair6 = new NamedValuePair();
                        namedValuePair6.DeserializeJson(primaryProductValue);
                        this.PrimaryProduct.Add(namedValuePair6);
                    }
                }
                JToken productSequence = ((JToken)inputObject["Product"]);
                if (productSequence != null && productSequence.Type != JTokenType.Null)
                {
                    foreach (JToken productValue in ((JArray)productSequence))
                    {
                        NamedValuePair namedValuePair7 = new NamedValuePair();
                        namedValuePair7.DeserializeJson(productValue);
                        this.Product.Add(namedValuePair7);
                    }
                }
                JToken productTechnologySequence = ((JToken)inputObject["ProductTechnology"]);
                if (productTechnologySequence != null && productTechnologySequence.Type != JTokenType.Null)
                {
                    foreach (JToken productTechnologyValue in ((JArray)productTechnologySequence))
                    {
                        NamedValuePair namedValuePair8 = new NamedValuePair();
                        namedValuePair8.DeserializeJson(productTechnologyValue);
                        this.ProductTechnology.Add(namedValuePair8);
                    }
                }
                JToken queueSequence = ((JToken)inputObject["Queue"]);
                if (queueSequence != null && queueSequence.Type != JTokenType.Null)
                {
                    foreach (JToken queueValue in ((JArray)queueSequence))
                    {
                        NamedValuePair namedValuePair9 = new NamedValuePair();
                        namedValuePair9.DeserializeJson(queueValue);
                        this.Queue.Add(namedValuePair9);
                    }
                }
                JToken regionSequence = ((JToken)inputObject["Region"]);
                if (regionSequence != null && regionSequence.Type != JTokenType.Null)
                {
                    foreach (JToken regionValue in ((JArray)regionSequence))
                    {
                        Geography geography4 = new Geography();
                        geography4.DeserializeJson(regionValue);
                        this.Region.Add(geography4);
                    }
                }
                JToken regionCountrySequence = ((JToken)inputObject["RegionCountry"]);
                if (regionCountrySequence != null && regionCountrySequence.Type != JTokenType.Null)
                {
                    foreach (JToken regionCountryValue in ((JArray)regionCountrySequence))
                    {
                        Geography geography5 = new Geography();
                        geography5.DeserializeJson(regionCountryValue);
                        this.RegionCountry.Add(geography5);
                    }
                }
                JToken requestorValue = inputObject["Requestor"];
                if (requestorValue != null && requestorValue.Type != JTokenType.Null)
                {
                    this.Requestor = ((string)requestorValue);
                }
                JToken requestRoleSequence = ((JToken)inputObject["RequestRole"]);
                if (requestRoleSequence != null && requestRoleSequence.Type != JTokenType.Null)
                {
                    foreach (JToken requestRoleValue in ((JArray)requestRoleSequence))
                    {
                        NamedValuePair namedValuePair10 = new NamedValuePair();
                        namedValuePair10.DeserializeJson(requestRoleValue);
                        this.RequestRole.Add(namedValuePair10);
                    }
                }
                JToken requestStartDateValue = inputObject["RequestStartDate"];
                if (requestStartDateValue != null && requestStartDateValue.Type != JTokenType.Null)
                {
                    this.RequestStartDate = ((string)requestStartDateValue);
                }
                JToken requestTypeSequence = ((JToken)inputObject["RequestType"]);
                if (requestTypeSequence != null && requestTypeSequence.Type != JTokenType.Null)
                {
                    foreach (JToken requestTypeValue in ((JArray)requestTypeSequence))
                    {
                        NamedValuePair namedValuePair11 = new NamedValuePair();
                        namedValuePair11.DeserializeJson(requestTypeValue);
                        this.RequestType.Add(namedValuePair11);
                    }
                }
                JToken securitySequence = ((JToken)inputObject["Security"]);
                if (securitySequence != null && securitySequence.Type != JTokenType.Null)
                {
                    foreach (JToken securityValue in ((JArray)securitySequence))
                    {
                        NamedValuePair namedValuePair12 = new NamedValuePair();
                        namedValuePair12.DeserializeJson(securityValue);
                        this.Security.Add(namedValuePair12);
                    }
                }
                JToken technologySequence = ((JToken)inputObject["Technology"]);
                if (technologySequence != null && technologySequence.Type != JTokenType.Null)
                {
                    foreach (JToken technologyValue in ((JArray)technologySequence))
                    {
                        NamedValuePair namedValuePair13 = new NamedValuePair();
                        namedValuePair13.DeserializeJson(technologyValue);
                        this.Technology.Add(namedValuePair13);
                    }
                }
                JToken versionSequence = ((JToken)inputObject["Version"]);
                if (versionSequence != null && versionSequence.Type != JTokenType.Null)
                {
                    foreach (JToken versionValue in ((JArray)versionSequence))
                    {
                        NamedValuePair namedValuePair14 = new NamedValuePair();
                        namedValuePair14.DeserializeJson(versionValue);
                        this.Version.Add(namedValuePair14);
                    }
                }
                JToken workShopSequence = ((JToken)inputObject["WorkShop"]);
                if (workShopSequence != null && workShopSequence.Type != JTokenType.Null)
                {
                    foreach (JToken workShopValue in ((JArray)workShopSequence))
                    {
                        NamedValuePair namedValuePair15 = new NamedValuePair();
                        namedValuePair15.DeserializeJson(workShopValue);
                        this.WorkShop.Add(namedValuePair15);
                    }
                }
            }
        }
    }
}
