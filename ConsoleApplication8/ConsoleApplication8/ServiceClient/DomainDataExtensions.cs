// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.IT.GRM.ServiceClient;
using Microsoft.IT.GRM.ServiceClient.Models;
using Microsoft.Rest;

namespace Microsoft.IT.GRM.ServiceClient
{
    public static partial class DomainDataExtensions
    {
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='filterList'>
        /// Required.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        public static string GetDomainData(this IDomainData operations, FilterList filterList, string trackingId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDomainData)s).GetDomainDataAsync(filterList, trackingId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='filterList'>
        /// Required.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetDomainDataAsync(this IDomainData operations, FilterList filterList, string trackingId, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetDomainDataWithOperationResponseAsync(filterList, trackingId, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        public static string GetGeoLocations(this IDomainData operations, string trackingId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDomainData)s).GetGeoLocationsAsync(trackingId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetGeoLocationsAsync(this IDomainData operations, string trackingId, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetGeoLocationsWithOperationResponseAsync(trackingId, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        public static string GetProductSkills(this IDomainData operations, string trackingId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDomainData)s).GetProductSkillsAsync(trackingId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetProductSkillsAsync(this IDomainData operations, string trackingId, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetProductSkillsWithOperationResponseAsync(trackingId, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        public static string GetResources(this IDomainData operations, string trackingId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDomainData)s).GetResourcesAsync(trackingId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Microsoft.IT.GRM.ServiceClient.IDomainData.
        /// </param>
        /// <param name='trackingId'>
        /// Required. TrackingId (Guid) for Tracing. This will be present in
        /// Response Headers as well.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetResourcesAsync(this IDomainData operations, string trackingId, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetResourcesWithOperationResponseAsync(trackingId, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
